@model Basketball_WebAPI.Models.Member

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@{
    List<SelectListItem> listTeams = new List<SelectListItem>();
    listTeams.Add(new SelectListItem
    {
        Text = "Team A",
        Value = "Team A"
    });
    listTeams.Add(new SelectListItem
    {
        Text = "Team B",
        Value = "Team B",
        Selected = true
    });

    List<SelectListItem> listAuthorisation = new List<SelectListItem>();
    listAuthorisation.Add(new SelectListItem
    {
        Text = "Authorised",
        Value = "Authorised"
    });
    listAuthorisation.Add(new SelectListItem
    {
        Text = "Rejected",
        Value = "Rejected",
        Selected = true
    });
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Member</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.MemberID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MemberID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MemberID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Team, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Team, listTeams)
                @Html.ValidationMessageFor(model => model.Team, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Authorised, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Team, listAuthorisation)
                @Html.ValidationMessageFor(model => model.Authorised, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
